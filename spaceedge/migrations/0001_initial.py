# Generated by Django 4.0 on 2023-10-19 05:30

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AiInputdata',
            fields=[
                ('id', models.CharField(blank=True, db_column='ID', max_length=50, primary_key=True, serialize=False)),
                ('year', models.IntegerField(blank=True, db_column='Year', null=True)),
                ('month', models.IntegerField(blank=True, db_column='Month', null=True)),
                ('date', models.IntegerField(blank=True, db_column='Date', null=True)),
                ('hour', models.IntegerField(blank=True, db_column='Hour', null=True)),
                ('minute', models.IntegerField(blank=True, db_column='Minute', null=True)),
                ('second', models.IntegerField(blank=True, db_column='Second', null=True)),
                ('location', models.CharField(blank=True, db_column='Location', max_length=50, null=True)),
                ('in_temp', models.FloatField(blank=True, db_column='In_Temp', null=True)),
                ('in_rh', models.IntegerField(blank=True, db_column='In_RH', null=True)),
                ('in_illu', models.IntegerField(blank=True, db_column='In_Illu', null=True)),
                ('in_pm1', models.IntegerField(blank=True, db_column='In_PM1', null=True)),
                ('in_pm25', models.IntegerField(blank=True, db_column='In_PM25', null=True)),
                ('in_pm10', models.IntegerField(blank=True, db_column='In_PM10', null=True)),
                ('in_co2', models.IntegerField(blank=True, db_column='In_CO2', null=True)),
                ('in_room', models.IntegerField(blank=True, db_column='In_Room', null=True)),
                ('in_tvoc', models.IntegerField(blank=True, db_column='In_TVOC', null=True)),
                ('out_temp', models.FloatField(blank=True, db_column='Out_Temp', null=True)),
                ('out_rh', models.IntegerField(blank=True, db_column='Out_RH', null=True)),
                ('out_pm25', models.IntegerField(blank=True, db_column='Out_PM25', null=True)),
                ('out_pm10', models.IntegerField(blank=True, db_column='Out_PM10', null=True)),
                ('set_temp_min_comf', models.FloatField(blank=True, db_column='Set_Temp_Min_Comf', null=True)),
                ('set_temp_max_comf', models.FloatField(blank=True, db_column='Set_Temp_Max_Comf', null=True)),
                ('set_rh_min_comf', models.IntegerField(blank=True, db_column='Set_RH_Min_Comf', null=True)),
                ('set_rh_max_comf', models.IntegerField(blank=True, db_column='Set_RH_Max_Comf', null=True)),
                ('set_temp_min_es', models.FloatField(blank=True, db_column='Set_Temp_Min_ES', null=True)),
                ('set_temp_max_es', models.FloatField(blank=True, db_column='Set_Temp_Max_ES', null=True)),
                ('set_rh_min_es', models.IntegerField(blank=True, db_column='Set_RH_Min_ES', null=True)),
                ('set_rh_max_es', models.IntegerField(blank=True, db_column='Set_RH_Max_ES', null=True)),
                ('set_temp_min_heal', models.FloatField(blank=True, db_column='Set_Temp_Min_Heal', null=True)),
                ('set_temp_max_heal', models.FloatField(blank=True, db_column='Set_Temp_Max_Heal', null=True)),
                ('set_rh_min_heal', models.IntegerField(blank=True, db_column='Set_RH_Min_Heal', null=True)),
                ('set_rh_max_heal', models.IntegerField(blank=True, db_column='Set_RH_Max_Heal', null=True)),
                ('user_set_temp_min_comf', models.FloatField(blank=True, db_column='User_Set_Temp_Min_Comf', null=True)),
                ('user_set_temp_max_comf', models.FloatField(blank=True, db_column='User_Set_Temp_Max_Comf', null=True)),
                ('user_set_rh_min_comf', models.IntegerField(blank=True, db_column='User_Set_RH_Min_Comf', null=True)),
                ('user_set_rh_max_comf', models.IntegerField(blank=True, db_column='User_Set_RH_Max_Comf', null=True)),
                ('acn_ctrl', models.IntegerField(blank=True, db_column='ACN_Ctrl', null=True)),
                ('acl_ctrl', models.IntegerField(blank=True, db_column='ACL_Ctrl', null=True)),
                ('hum_ctrl', models.IntegerField(blank=True, db_column='HUM_Ctrl', null=True)),
                ('lig_ctrl', models.IntegerField(blank=True, db_column='LIG_Ctrl', null=True)),
                ('hea_ctrl', models.IntegerField(blank=True, db_column='HEA_Ctrl', null=True)),
                ('ven_ctrl', models.IntegerField(blank=True, db_column='VEN_Ctrl', null=True)),
                ('boi_ctrl_pwr_wire', models.IntegerField(blank=True, db_column='BOI_Ctrl_Pwr_Wire', null=True)),
                ('boi_tem_wire', models.IntegerField(blank=True, db_column='BOI_tem_Wire', null=True)),
                ('ven_ctrl_wire', models.IntegerField(blank=True, db_column='VEN_Ctrl_Wire', null=True)),
                ('ven_mode_wire', models.IntegerField(blank=True, db_column='VEN_Mode_Wire', null=True)),
                ('ven_wind_wire', models.IntegerField(blank=True, db_column='VEN_Wind_Wire', null=True)),
                ('bli_ctrl_wire', models.IntegerField(blank=True, db_column='BLI_Ctrl_Wire', null=True)),
                ('bli_posi_wire', models.IntegerField(blank=True, db_column='BLI_Posi_Wire', null=True)),
                ('bli_tilt_wire', models.IntegerField(blank=True, db_column='BLI_Tilt_Wire', null=True)),
                ('ther_ctrl_pwr_wire', models.IntegerField(blank=True, db_column='Ther_Ctrl_Pwr_Wire', null=True)),
                ('ther_tem_pwr_wire', models.IntegerField(blank=True, db_column='Ther_Tem_Pwr_Wire', null=True)),
                ('acl_ctrl_wire', models.IntegerField(blank=True, db_column='ACL_Ctrl_Wire', null=True)),
                ('acl_ctrl_wind_wire', models.IntegerField(blank=True, db_column='ACL_Ctrl_Wind_Wire', null=True)),
                ('acl_ctrl_mode_wire', models.IntegerField(blank=True, db_column='ACL_Ctrl_Mode_Wire', null=True)),
                ('delta_t', models.FloatField(db_column='Delta_T')),
                ('nocc_temp', models.FloatField(db_column='NOcc_Temp')),
                ('auto_ctrl', models.IntegerField(blank=True, db_column='Auto_Ctrl', null=True)),
                ('ai_mode', models.IntegerField(blank=True, db_column='AI_Mode', null=True)),
                ('ai_comf', models.IntegerField(blank=True, db_column='AI_Comf', null=True)),
                ('ai_es', models.IntegerField(blank=True, db_column='AI_ES', null=True)),
                ('ai_heal', models.IntegerField(blank=True, db_column='AI_Heal', null=True)),
                ('ai_out', models.IntegerField(blank=True, db_column='AI_Out', null=True)),
                ('occ_decision', models.IntegerField(blank=True, db_column='Occ_Decision', null=True)),
                ('regdate', models.DateTimeField()),
            ],
            options={
                'db_table': 'ai_inputdata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AiOutputdata',
            fields=[
                ('id', models.CharField(blank=True, db_column='ID', max_length=50, primary_key=True, serialize=False)),
                ('year', models.IntegerField(blank=True, db_column='Year', null=True)),
                ('month', models.IntegerField(blank=True, db_column='Month', null=True)),
                ('date', models.IntegerField(blank=True, db_column='Date', null=True)),
                ('hour', models.IntegerField(blank=True, db_column='Hour', null=True)),
                ('minute', models.IntegerField(blank=True, db_column='Minute', null=True)),
                ('second', models.IntegerField(blank=True, db_column='Second', null=True)),
                ('occ', models.IntegerField(blank=True, db_column='Occ', null=True)),
                ('acn_on_ir', models.IntegerField(blank=True, db_column='ACN_On_IR', null=True)),
                ('acn_off_ir', models.IntegerField(blank=True, db_column='ACN_Off_IR', null=True)),
                ('acl_on_ir', models.IntegerField(blank=True, db_column='ACL_On_IR', null=True)),
                ('acl_off_ir', models.IntegerField(blank=True, db_column='ACL_Off_IR', null=True)),
                ('hum_on_ir', models.IntegerField(blank=True, db_column='HUM_On_IR', null=True)),
                ('hum_off_ir', models.IntegerField(blank=True, db_column='HUM_Off_IR', null=True)),
                ('hea_on_ir', models.IntegerField(blank=True, db_column='HEA_On_IR', null=True)),
                ('hea_off_ir', models.IntegerField(blank=True, db_column='HEA_Off_IR', null=True)),
                ('ven_on_ir', models.IntegerField(blank=True, db_column='VEN_On_IR', null=True)),
                ('ven_off_ir', models.IntegerField(blank=True, db_column='VEN_Off_IR', null=True)),
                ('lig_on_ir', models.IntegerField(blank=True, db_column='LIG_On_IR', null=True)),
                ('lig_off_ir', models.IntegerField(blank=True, db_column='LIG_Off_IR', null=True)),
                ('boi_on_wire', models.IntegerField(blank=True, db_column='BOI_On_Wire', null=True)),
                ('boi_off_wire', models.IntegerField(blank=True, db_column='BOI_Off_Wire', null=True)),
                ('boi_tem_wire', models.IntegerField(blank=True, db_column='BOI_Tem_Wire', null=True)),
                ('ven_on_wire', models.IntegerField(blank=True, db_column='VEN_On_Wire', null=True)),
                ('ven_off_wire', models.IntegerField(blank=True, db_column='VEN_Off_Wire', null=True)),
                ('ven_wind_wire', models.IntegerField(blank=True, db_column='VEN_Wind_Wire', null=True)),
                ('ven_mode_wire', models.IntegerField(blank=True, db_column='VEN_Mode_Wire', null=True)),
                ('bli_up_wire', models.IntegerField(blank=True, db_column='BLI_UP_Wire', null=True)),
                ('bli_down_wire', models.IntegerField(blank=True, db_column='BLI_Down_Wire', null=True)),
                ('bli_posi_wire', models.IntegerField(blank=True, db_column='BLI_Posi_Wire', null=True)),
                ('bli_tilt_wire', models.IntegerField(blank=True, db_column='BLI_Tilt_Wire', null=True)),
                ('ther_on_wire', models.IntegerField(blank=True, db_column='Ther_On_Wire', null=True)),
                ('ther_off_wire', models.IntegerField(blank=True, db_column='Ther_Off_Wire', null=True)),
                ('ther_tem_wire', models.IntegerField(blank=True, db_column='Ther_Tem_Wire', null=True)),
                ('acl_on_wire', models.IntegerField(blank=True, db_column='ACL_On_Wire', null=True)),
                ('acl_off_wire', models.IntegerField(blank=True, db_column='ACL_Off_Wire', null=True)),
                ('acl_wind_wire', models.IntegerField(blank=True, db_column='ACL_Wind_Wire', null=True)),
                ('acl_mode_wire', models.IntegerField(blank=True, db_column='ACL_Mode_Wire', null=True)),
                ('ai_comf_ctrl', models.IntegerField(blank=True, db_column='AI_Comf_Ctrl', null=True)),
                ('ai_es_ctrl', models.IntegerField(blank=True, db_column='AI_ES_Ctrl', null=True)),
                ('ai_heal_ctrl', models.IntegerField(blank=True, db_column='AI_Heal_Ctrl', null=True)),
                ('ai_out_ctrl', models.IntegerField(blank=True, db_column='AI_Out_Ctrl', null=True)),
                ('push', models.CharField(blank=True, db_column='Push', max_length=50, null=True)),
                ('regdate', models.DateTimeField()),
            ],
            options={
                'db_table': 'ai_outputdata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AiSetInfo',
            fields=[
                ('id', models.CharField(blank=True, db_column='ID', max_length=50, primary_key=True, serialize=False)),
                ('set_temp_min_comf', models.FloatField(blank=True, db_column='Set_Temp_Min_Comf', null=True)),
                ('set_temp_max_comf', models.FloatField(blank=True, db_column='Set_Temp_Max_Comf', null=True)),
                ('set_rh_min_comf', models.IntegerField(blank=True, db_column='Set_RH_Min_Comf', null=True)),
                ('set_rh_max_comf', models.IntegerField(blank=True, db_column='Set_RH_Max_Comf', null=True)),
                ('set_temp_min_es', models.FloatField(blank=True, db_column='Set_Temp_Min_ES', null=True)),
                ('set_temp_max_es', models.FloatField(blank=True, db_column='Set_Temp_Max_ES', null=True)),
                ('set_rh_min_es', models.IntegerField(blank=True, db_column='Set_RH_Min_ES', null=True)),
                ('set_rh_max_es', models.IntegerField(blank=True, db_column='Set_RH_Max_ES', null=True)),
                ('set_temp_min_heal', models.FloatField(blank=True, db_column='Set_Temp_Min_Heal', null=True)),
                ('set_temp_max_heal', models.FloatField(blank=True, db_column='Set_Temp_Max_Heal', null=True)),
                ('set_rh_min_heal', models.IntegerField(blank=True, db_column='Set_RH_Min_Heal', null=True)),
                ('set_rh_max_heal', models.IntegerField(blank=True, db_column='Set_RH_Max_Heal', null=True)),
                ('user_set_temp_min_comf', models.FloatField(blank=True, db_column='User_Set_Temp_Min_Comf', null=True)),
                ('user_set_temp_max_comf', models.FloatField(blank=True, db_column='User_Set_Temp_Max_Comf', null=True)),
                ('user_set_rh_min_comf', models.IntegerField(blank=True, db_column='User_Set_RH_Min_Comf', null=True)),
                ('user_set_rh_max_comf', models.IntegerField(blank=True, db_column='User_Set_RH_Max_Comf', null=True)),
            ],
            options={
                'db_table': 'ai_set_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AiUpload',
            fields=[
                ('sid', models.AutoField(primary_key=True, serialize=False)),
                ('file_name', models.TextField(blank=True, null=True)),
                ('regdate', models.DateTimeField()),
            ],
            options={
                'db_table': 'ai_upload',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Alarm',
            fields=[
                ('sid', models.AutoField(primary_key=True, serialize=False)),
                ('alarm_type', models.IntegerField()),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('msg', models.CharField(blank=True, max_length=50, null=True)),
                ('solve_flag', models.IntegerField()),
                ('push_date', models.DateTimeField(blank=True, null=True)),
                ('regdate', models.DateTimeField()),
                ('delflag', models.IntegerField()),
            ],
            options={
                'db_table': 'alarm',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AlarmMbrs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('m_sid', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'alarm_mbrs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AlarmSetting',
            fields=[
                ('sid', models.AutoField(primary_key=True, serialize=False)),
                ('alarm_type', models.IntegerField()),
                ('interval', models.IntegerField()),
                ('standard', models.IntegerField()),
                ('start_time', models.CharField(blank=True, max_length=50, null=True)),
                ('end_time', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'alarm_setting',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('sid', models.AutoField(primary_key=True, serialize=False)),
                ('fac_type', models.IntegerField()),
                ('brand_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'brand',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BrandCable',
            fields=[
                ('sid', models.AutoField(primary_key=True, serialize=False)),
                ('fac_type', models.IntegerField()),
                ('brand_num', models.IntegerField()),
                ('brand_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'brand_cable',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BuildingUse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num', models.IntegerField()),
                ('name', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'building_use',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ButtonType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fac_type', models.IntegerField()),
                ('btn_type', models.IntegerField()),
            ],
            options={
                'db_table': 'button_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CableBtn',
            fields=[
                ('sid', models.AutoField(primary_key=True, serialize=False)),
                ('fac_type', models.IntegerField()),
                ('brand_num', models.IntegerField()),
                ('btn_type', models.IntegerField()),
                ('use_flag', models.IntegerField()),
                ('mode_type', models.IntegerField()),
                ('mode_value', models.CharField(max_length=10)),
                ('regdate', models.DateTimeField()),
                ('delflag', models.IntegerField()),
            ],
            options={
                'db_table': 'cable_btn',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CableConnect',
            fields=[
                ('sid', models.AutoField(primary_key=True, serialize=False)),
                ('s_num', models.CharField(max_length=50)),
                ('fac_type_1', models.IntegerField(blank=True, null=True)),
                ('status_1', models.IntegerField(blank=True, null=True)),
                ('fac_type_2', models.IntegerField(blank=True, null=True)),
                ('status_2', models.IntegerField(blank=True, null=True)),
                ('fac_type_3', models.IntegerField(blank=True, null=True)),
                ('status_3', models.IntegerField(blank=True, null=True)),
                ('fac_type_4', models.IntegerField(blank=True, null=True)),
                ('status_4', models.IntegerField(blank=True, null=True)),
                ('fac_type_5', models.IntegerField(blank=True, null=True)),
                ('status_5', models.IntegerField(blank=True, null=True)),
                ('regdate', models.DateTimeField()),
                ('delflag', models.IntegerField()),
            ],
            options={
                'db_table': 'cable_connect',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('sid', models.AutoField(primary_key=True, serialize=False)),
                ('m_sid', models.IntegerField()),
                ('s_num', models.CharField(max_length=50)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('room', models.CharField(blank=True, max_length=50, null=True)),
                ('wifi_id', models.TextField()),
                ('wifi_pw', models.CharField(blank=True, max_length=50, null=True)),
                ('room_floor', models.IntegerField(blank=True, null=True)),
                ('room_size', models.FloatField(blank=True, null=True)),
                ('room_direction', models.CharField(blank=True, max_length=50, null=True)),
                ('room_man_cnt', models.IntegerField(blank=True, null=True)),
                ('work_type', models.IntegerField()),
                ('season_type', models.IntegerField()),
                ('temp', models.FloatField(blank=True, null=True)),
                ('humi', models.IntegerField(blank=True, null=True)),
                ('co2', models.IntegerField(blank=True, null=True)),
                ('dust_pm_1', models.IntegerField(blank=True, null=True)),
                ('dust_pm_25', models.IntegerField(blank=True, null=True)),
                ('dust_pm_10', models.IntegerField(blank=True, null=True)),
                ('illuminance', models.IntegerField(blank=True, null=True)),
                ('voc', models.IntegerField(blank=True, null=True)),
                ('eco2', models.IntegerField(blank=True, null=True)),
                ('in_room', models.IntegerField(blank=True, null=True)),
                ('env', models.IntegerField()),
                ('in_flag', models.IntegerField()),
                ('regdate', models.DateTimeField()),
                ('delflag', models.IntegerField()),
                ('m_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'device',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('sid', models.AutoField(primary_key=True, serialize=False)),
                ('fac_type', models.IntegerField()),
                ('fac_kind', models.IntegerField()),
                ('brand_id', models.IntegerField()),
                ('fac_code', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'facility',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FacilityKind',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fac_type', models.IntegerField()),
                ('fac_kind', models.IntegerField()),
                ('kind_name', models.CharField(max_length=50)),
                ('note', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'facility_kind',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrDef',
            fields=[
                ('sid', models.AutoField(primary_key=True, serialize=False)),
                ('fac_type', models.IntegerField()),
                ('brand_id', models.IntegerField()),
                ('remote_type', models.IntegerField()),
                ('def_flag', models.IntegerField(blank=True, null=True)),
                ('ir_code', models.CharField(blank=True, max_length=5, null=True)),
                ('code', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=50)),
                ('ir_value', models.TextField()),
                ('regdate', models.DateTimeField()),
            ],
            options={
                'db_table': 'ir_def',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrNew',
            fields=[
                ('sid', models.AutoField(primary_key=True, serialize=False)),
                ('m_sid', models.IntegerField()),
                ('did', models.IntegerField()),
                ('fac_type', models.IntegerField()),
                ('brand_id', models.IntegerField()),
                ('brand_name', models.CharField(blank=True, max_length=50, null=True)),
                ('ir_code', models.CharField(max_length=5)),
                ('remote_id', models.IntegerField()),
                ('access_flag', models.IntegerField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=50, null=True)),
                ('ir_value', models.TextField(blank=True, null=True)),
                ('in_flag', models.IntegerField()),
                ('use_date', models.DateTimeField(blank=True, null=True)),
                ('regdate', models.DateTimeField()),
            ],
            options={
                'db_table': 'ir_new',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mbrs',
            fields=[
                ('sid', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.CharField(max_length=50)),
                ('pw', models.CharField(blank=True, max_length=50, null=True)),
                ('login_type', models.IntegerField()),
                ('kakao_id', models.CharField(blank=True, max_length=50, null=True)),
                ('naver_id', models.CharField(blank=True, max_length=50, null=True)),
                ('google_id', models.CharField(blank=True, max_length=50, null=True)),
                ('facebook_id', models.CharField(blank=True, max_length=50, null=True)),
                ('db_name', models.CharField(blank=True, max_length=50, null=True)),
                ('os', models.CharField(blank=True, max_length=1, null=True)),
                ('os_ver', models.CharField(blank=True, max_length=50, null=True)),
                ('model', models.CharField(blank=True, max_length=50, null=True)),
                ('nick', models.CharField(blank=True, max_length=50, null=True)),
                ('gender', models.IntegerField(blank=True, null=True)),
                ('age', models.CharField(blank=True, max_length=4, null=True)),
                ('birthday', models.CharField(blank=True, max_length=50, null=True)),
                ('token_key', models.TextField(blank=True, null=True)),
                ('alarm_type', models.IntegerField()),
                ('level', models.IntegerField()),
                ('login_cnt', models.IntegerField()),
                ('login_date', models.CharField(max_length=50)),
                ('regdate', models.DateTimeField(blank=True, null=True)),
                ('delflag', models.IntegerField()),
            ],
            options={
                'db_table': 'mbrs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('sid', models.AutoField(primary_key=True, serialize=False)),
                ('m_sid', models.IntegerField()),
                ('name', models.CharField(max_length=50)),
                ('area_code', models.CharField(max_length=2)),
                ('city_code', models.CharField(max_length=2)),
                ('dong_code', models.CharField(max_length=4)),
                ('area', models.CharField(max_length=10)),
                ('city', models.CharField(max_length=10)),
                ('dong', models.CharField(max_length=10)),
                ('building_use', models.CharField(max_length=10)),
                ('floor', models.IntegerField()),
                ('building_size', models.FloatField()),
                ('direction', models.CharField(max_length=50)),
                ('build_year', models.CharField(max_length=4)),
                ('man_cnt', models.IntegerField()),
                ('regdate', models.DateTimeField()),
                ('delflag', models.IntegerField()),
                ('building_year', models.CharField(blank=True, max_length=255, null=True)),
                ('deflag', models.IntegerField(blank=True, null=True)),
                ('m_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'place',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlaceArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area_type', models.CharField(max_length=1)),
                ('area_code', models.CharField(max_length=2)),
                ('city_code', models.CharField(blank=True, max_length=2, null=True)),
                ('dong_code', models.CharField(blank=True, max_length=4, null=True)),
                ('area', models.CharField(max_length=10)),
                ('city', models.CharField(blank=True, max_length=10, null=True)),
                ('dong', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'place_area',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Remote',
            fields=[
                ('sid', models.AutoField(primary_key=True, serialize=False)),
                ('m_sid', models.IntegerField()),
                ('name', models.CharField(max_length=50)),
                ('did', models.IntegerField()),
                ('s_num', models.CharField(max_length=50)),
                ('fac_type', models.IntegerField()),
                ('fac_kind', models.IntegerField()),
                ('fac_cnt', models.IntegerField()),
                ('brand_id', models.IntegerField()),
                ('brand_name', models.CharField(blank=True, max_length=50, null=True)),
                ('set_year', models.CharField(max_length=4)),
                ('remote_type', models.IntegerField(blank=True, null=True)),
                ('control_type', models.IntegerField(blank=True, null=True)),
                ('ir_type', models.IntegerField()),
                ('onoff_flag', models.PositiveIntegerField()),
                ('btn_1', models.IntegerField(blank=True, null=True)),
                ('btn_2', models.IntegerField(blank=True, null=True)),
                ('btn_3', models.IntegerField(blank=True, null=True)),
                ('btn_4', models.IntegerField(blank=True, null=True)),
                ('btn_5', models.IntegerField(blank=True, null=True)),
                ('btn_6', models.IntegerField(blank=True, null=True)),
                ('btn_7', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'remote',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RemoteBlaster',
            fields=[
                ('sid', models.AutoField(primary_key=True, serialize=False)),
                ('fac_type', models.IntegerField()),
                ('brand_id', models.IntegerField()),
                ('remote_type', models.IntegerField(blank=True, null=True)),
                ('btn_1', models.IntegerField(blank=True, null=True)),
                ('btn_2', models.IntegerField(blank=True, null=True)),
                ('btn_3', models.IntegerField(blank=True, null=True)),
                ('btn_4', models.IntegerField(blank=True, null=True)),
                ('btn_5', models.IntegerField(blank=True, null=True)),
                ('btn_6', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'remote_blaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num', models.IntegerField()),
                ('buse_name', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'room',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Timer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('s_num', models.CharField(max_length=50)),
                ('remote_id', models.IntegerField()),
                ('use_flag', models.IntegerField()),
                ('timer_type', models.IntegerField()),
                ('off_time', models.DateTimeField()),
                ('regdate', models.DateTimeField()),
            ],
            options={
                'db_table': 'timer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Weather',
            fields=[
                ('sid', models.AutoField(primary_key=True, serialize=False)),
                ('area_code', models.CharField(max_length=2)),
                ('city_code', models.CharField(max_length=2)),
                ('dong_code', models.CharField(max_length=4)),
                ('area', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('dong', models.CharField(max_length=50)),
                ('temp', models.FloatField(blank=True, null=True)),
                ('humi', models.IntegerField(blank=True, null=True)),
                ('dust_pm_25', models.IntegerField(blank=True, null=True)),
                ('dust_pm_10', models.IntegerField(blank=True, null=True)),
                ('co', models.FloatField(blank=True, null=True)),
                ('co2', models.FloatField(blank=True, null=True)),
                ('no2', models.FloatField(blank=True, null=True)),
                ('so2', models.FloatField(blank=True, null=True)),
                ('o3', models.FloatField(blank=True, null=True)),
                ('vec', models.IntegerField(blank=True, null=True)),
                ('wsd', models.FloatField(blank=True, null=True)),
                ('rn', models.FloatField(blank=True, null=True)),
                ('mj', models.FloatField(blank=True, null=True)),
                ('skc', models.IntegerField(blank=True, null=True)),
                ('hr', models.FloatField(blank=True, null=True)),
                ('sky', models.IntegerField(blank=True, null=True)),
                ('pty', models.IntegerField(blank=True, null=True)),
                ('regdate', models.DateTimeField()),
            ],
            options={
                'db_table': 'weather',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WeatherArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area_type', models.CharField(max_length=1)),
                ('area_code', models.CharField(max_length=2)),
                ('city_code', models.CharField(blank=True, max_length=2, null=True)),
                ('dong_code', models.CharField(blank=True, max_length=4, null=True)),
                ('area', models.CharField(max_length=50)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('dong', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'weather_area',
                'managed': False,
            },
        ),
    ]
